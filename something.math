fn maths(z) {
   a = 13 * 2 - z;
   b = 9 * 2;
   c = a ^ b;
   d = c - (a * b);
   # If we return our output, the interpreter will print it!
   return d;
}

fn id(x) {
   return id2(x);
}

fn id2(x) {
   return id3(x);
}

fn id3(x) {
   return x;
}

fn add(a, b) {
   return a + b;
}

fn mul(a, b) {
   return a * b;
}

if 1 < 0 {
  return 420 / 10;
} else if 1 == 2 {
  return 32;
} else {
  return fib(64);
}

fn fib(n) {
  return fib2(n, 0, 1);
}

fn fib2(n, a, b) {
  if n <= 0 {
    return a;
  }
  return fib2(n - 1, b, a + b);
}

# 2 * 2 + 2 * 2
# return id(add(id2(mul(id3(2),
#                       id3(2))),
#               id2(mul(id3(2),
#                       id3(2)))));